{"version":3,"sources":["utils/capitalize.js","Components/Button/Button.jsx","Components/FeedbackOptions/FeedbackOptions.jsx","Components/Section/Section.jsx","Components/Statistics/Statistics.jsx","Components/Notification/Notification.jsx","Components/App/App.jsx","index.js","Components/Section/Section.module.css","Components/Button/Button.module.css"],"names":["capitalize","string","charAt","toUpperCase","slice","Button","text","onIncrement","buttonText","type","onClick","e","className","styles","button","FeedbackOptions","options","onLeaveFeedback","elements","Object","keys","map","elem","Section","title","children","section","Statistics","good","neutral","bad","total","positivePercentage","Notification","message","App","state","handleIncrement","setState","prevState","countTotalFeedback","countPositiveFeedbackPercentage","Number","toFixed","this","totalFeedback","positiveFeedbackPercentage","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"4NAGeA,EAHI,SAAAC,GACjB,OAAOA,EAAOC,OAAO,GAAGC,cAAgBF,EAAOG,MAAM,I,uBCsBxCC,EAnBA,SAAC,GAAsC,IAAD,IAAnCC,YAAmC,MAA5B,SAA4B,EAAlBC,EAAkB,EAAlBA,YAK3BC,EAAaR,EAAWM,GAE9B,OACE,wBAAQG,KAAK,SAASC,QAPC,SAAAC,GACvBJ,EAAYD,IAMqCM,UAAWC,IAAOC,OAAnE,SACGN,KCMQO,EAhBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAAWC,OAAOC,KAAKJ,GAC7B,OACE,mCACGE,EAASG,KAAI,SAAAC,GACZ,OAAO,cAAC,EAAD,CAAmBhB,KAAMgB,EAAMf,YAAaU,GAA/BK,S,gBCSbC,EAdC,SAAC,GAAqC,IAAD,IAAlCC,aAAkC,MAA1B,UAA0B,EAAfC,EAAe,EAAfA,SACpC,OACE,0BAASb,UAAWC,IAAOa,QAA3B,UACE,oBAAId,UAAWC,IAAOW,MAAtB,SAA8BA,IAC7BC,MCcQE,EAnBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,mBAA9B,OACjB,qCACE,4CACA,wCAAWJ,EAAX,OACA,0CAAaC,EAAb,OACA,uCAAUC,KACV,yCAAYC,KACZ,qDAAwBC,EAAxB,YCCWC,EARM,SAAC,GAAD,QAAGC,eAAH,MAAa,yBAAb,SACnB,4BAAIA,KCwDSC,E,4MApDbC,MAAQ,CACNR,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGPO,gBAAkB,SAAA/B,GAChB,EAAKgC,UAAS,SAAAC,GAAS,sBAAQjC,EAAOiC,EAAUjC,GAAQ,O,EAG1DkC,mBAAqB,WAAO,IAAD,EACM,EAAKJ,MAEpC,OAHyB,EACjBR,KADiB,EACXC,QADW,EACFC,K,EAKzBW,gCAAkC,WAAO,IAC/Bb,EAAS,EAAKQ,MAAdR,KACR,GAAa,IAATA,EAAY,OAAO,EACvB,IAAMG,EAAQ,EAAKS,qBAGnB,OADeE,QADqBd,EAAOG,EAAS,KACHY,QAAQ,K,4CAI3D,WAAU,IAAD,EACwBC,KAAKR,MAA5BR,EADD,EACCA,KAAMC,EADP,EACOA,QAASC,EADhB,EACgBA,IACjBe,EAAgBD,KAAKJ,qBACrBM,EAA6BF,KAAKH,kCAExC,OACE,eAAC,EAAD,CAASjB,MAAM,wBAAf,UACE,cAAC,EAAD,CACER,QAAS4B,KAAKR,MACdnB,gBAAiB2B,KAAKP,kBAEL,IAAlBQ,EACC,cAAC,EAAD,CAAcX,QAAQ,sBAEtB,cAAC,EAAD,CACEN,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOc,EACPb,mBAAoBc,W,GA7CdC,a,MCDlBC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,kBCA7DD,EAAOC,QAAU,CAAC,OAAS,uBAAuB,SAAW,4B","file":"static/js/main.4c2c3033.chunk.js","sourcesContent":["const capitalize = string => {\r\n  return string.charAt(0).toUpperCase() + string.slice(1);\r\n};\r\nexport default capitalize;\r\n","import PropTypes from 'prop-types';\r\nimport capitalize from '../../utils/capitalize';\r\nimport styles from './Button.module.css';\r\n\r\nconst Button = ({ text = 'Button', onIncrement }) => {\r\n  const handlerIncrement = e => {\r\n    onIncrement(text);\r\n  };\r\n\r\n  const buttonText = capitalize(text);\r\n\r\n  return (\r\n    <button type=\"button\" onClick={handlerIncrement} className={styles.button}>\r\n      {buttonText}\r\n    </button>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  text: PropTypes.string,\r\n  onIncrement: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import Button from '../Button';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const elements = Object.keys(options);\r\n  return (\r\n    <>\r\n      {elements.map(elem => {\r\n        return <Button key={elem} text={elem} onIncrement={onLeaveFeedback} />;\r\n      })}\r\n    </>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object.isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title = 'Section', children }) => {\r\n  return (\r\n    <section className={styles.section}>\r\n      <h1 className={styles.title}>{title}</h1>\r\n      {children}\r\n    </section>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => (\r\n  <>\r\n    <h2>Statistics</h2>\r\n    <p>Good : {good} </p>\r\n    <p>Neutral :{neutral} </p>\r\n    <p>Bad : {bad}</p>\r\n    <p>Total : {total}</p>\r\n    <p>Positive feedback : {positivePercentage} %</p>\r\n  </>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number,\r\n  neutral: PropTypes.number,\r\n  bad: PropTypes.number,\r\n  total: PropTypes.number,\r\n  positivePercentage: PropTypes.number,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nconst Notification = ({ message = \"We don't have feedback\" }) => (\r\n  <p>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import { Component } from 'react';\nimport FeedbackOptions from '../FeedbackOptions';\nimport Section from '../Section';\nimport Statistics from '../Statistics';\nimport Notification from '../Notification';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleIncrement = text => {\n    this.setState(prevState => ({ [text]: prevState[text] + 1 }));\n  };\n\n  countTotalFeedback = () => {\n    const { good, neutral, bad } = this.state;\n    const total = good + neutral + bad;\n    return total;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    const { good } = this.state;\n    if (good === 0) return 0;\n    const total = this.countTotalFeedback();\n    const positiveFeedbackPercentage = (good / total) * 100;\n    const result = Number(positiveFeedbackPercentage.toFixed(1));\n    return result;\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    const totalFeedback = this.countTotalFeedback();\n    const positiveFeedbackPercentage = this.countPositiveFeedbackPercentage();\n\n    return (\n      <Section title=\"Please leave feedback\">\n        <FeedbackOptions\n          options={this.state}\n          onLeaveFeedback={this.handleIncrement}\n        />\n        {totalFeedback === 0 ? (\n          <Notification message=\"No feedback given\" />\n        ) : (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={totalFeedback}\n            positivePercentage={positiveFeedbackPercentage}\n          />\n        )}\n      </Section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Components/App';\nimport 'modern-normalize/modern-normalize.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__1Fd__\",\"title\":\"Section_title__sIToG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__2Qx4_\",\"disabled\":\"Button_disabled__QfL8P\"};"],"sourceRoot":""}